{"version":3,"sources":["styles/ContactList.module.css","redux/Contacts/contact-actions.js","service/contact-api.js","redux/Contacts/contact-operations.js","redux/Contacts/contact-selectors.js","components/ Ğ¡ontactForm.js","components/ContactList.js","components/Filter.js","App.js","redux/Contacts/contact-reducer.js","redux/store.js","index.js","styles/ContactForm..module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getContact","a","get","addContact","contact","post","data","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","className","style","form","onSubmit","preventDefault","find","checkRepeatName","alert","addContacts","label","input","type","onChange","button","ContactList","onDeleteContact","id","delete","then","catch","error","deleteContacts","useEffect","list","map","list_name","onClick","Filter","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","reduce","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12afa608.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3I7bH\",\"list_name\":\"ContactList_list_name__152z0\",\"button\":\"ContactList_button__36Xig\"};","import { createAction } from '@reduxjs/toolkit'\n\nexport const fetchContactRequest = createAction('/contacts/fetchContactRequest')\nexport const fetchContactSuccess = createAction('/contacts/fetchContactSuccess')\nexport const fetchContactError = createAction('/contacts/fetchContactError')\n\nexport const addContactRequest = createAction('/contacts/addContactRequest')\nexport const addContactSuccess = createAction('/contacts/addContactSuccess')\nexport const addContactError = createAction('/contacts/addContactError')\n\nexport const deleteContactRequest = createAction('/contacts/deleteContactRequest')\nexport const deleteContactSuccess = createAction('/contacts/deleteContactSuccess')\nexport const deleteContactError = createAction('/contacts/deleteContactError')\n\nexport const changeFilter = createAction('/contacts/filter')\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n\n\n// const addContact = createAction('ContactForm/addContact',\n//     ({ name, number }) => {\n//         return {\n//             payload: { name, number, id: uuidv4() }\n//         }\n//     }\n// );\n\n// const deleteContact = createAction('ContactForm/deleteContact');\n\n// const changeFilter = createAction('ContactForm/changeFilter');\n\n// // eslint-disable-next-line import/no-anonymous-default-export\n// export default { addContact, deleteContact, changeFilter };\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'http://localhost:3000'\n\n\nexport const getContact = async () => {\n   return await axios.get('/contacts');\n  \n  \n  };\n  \n  export const addContact = async contact => {\n    const{data} = await axios.post('/contacts', contact);\n    return data;\n  };\n\n\n","import {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError\n} from '../Contacts/contact-actions';\nimport {addContact,getContact,deleteContact}from '../../service/contact-api';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\n\nexport const fetchContacts = () => async dispatch => {\n    dispatch(fetchContactRequest());\n  \n    try {\n        // console.log(await getContact())\n      const { data } = await getContact();\n  dispatch(fetchContactSuccess(data))\n     \n    } catch (error) {\n      dispatch(fetchContactError(error));\n    }\n  \n}\n\nexport const addContacts = (name, number) => async dispatch => {\n    const contact = {\n        name,\n        number,\n      };\n    dispatch(addContactRequest());\n    try {\n        // console.log(await addContact(contact))\n        const items = await addContact(contact);\n        dispatch(addContactSuccess(items))\n\n    } catch (error) {\n        dispatch(addContactError(error))\n    }\n}\n\nexport const deleteContacts = id => dispatch => {\n    dispatch(deleteContactRequest());\n  \n    axios\n      .delete(`/contacts/${id}`)\n      .then(() => dispatch(deleteContactSuccess(id)))\n      .catch(error => dispatch(deleteContactError(error)));\n  };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n    [getContacts,getFilter],\n    (contacts,filter)=>{\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n    );\n\n    })\n\n// export const getVisibleContacts = state => {\n//    const contacts = getContacts(state);\n//    const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(({ name }) =>\n//         name.toLowerCase().includes(normalizedFilter),\n//     );\n\n// }\n\n","import { useState } from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport style from '../styles/ContactForm..module.css';\nimport { addContacts } from '../redux/Contacts/contact-operations';\nimport {getContacts} from '../redux/Contacts/contact-selectors';\n\nfunction ContactForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n     const contacts = useSelector(getContacts)\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name': setName(value);\n                break;\n\n            case 'number': setNumber(value);\n                break;\n\n            default: return;\n        }\n    };\n\n    const checkRepeatName = name => {\n        return contacts.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase(),\n        );\n      };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (checkRepeatName(name)) {\n            alert(`${name} ÑĞ¶Ğµ ĞµÑÑÑ Ğ² ĞºĞ¾Ğ½ÑĞ°ĞºÑĞ°Ñ`);\n           }\n        dispatch(addContacts(name, number))\n        setName('');\n        setNumber('');\n    };\n\n\n    return (\n        <form className={style.form} onSubmit={handleSubmit}>\n            <label className={style.label}>\n                Name\n                <input\n                    className={style.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label className={style.label}>\n                Number\n                <input\n                    className={style.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                />\n            </label>\n            <button className={style.button} type=\"submit\">\n                ĞĞ¾Ğ±Ğ°Ğ²Ğ¸ÑÑ ĞºĞ¾Ğ½ÑĞ°ĞºÑ\n            </button>\n        </form>\n    );\n\n\n};\n\nexport default ContactForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect} from 'react';\nimport style from '../styles/ContactList.module.css';\nimport { deleteContacts, fetchContacts } from '../redux/Contacts/contact-operations';\nimport {getVisibleContacts} from '../redux/Contacts/contact-selectors';\n\nconst ContactList = () => {\n   const contacts = useSelector(getVisibleContacts)\n   const dispatch = useDispatch();\n   const onDeleteContact = id => dispatch(deleteContacts(id));\n   \n   useEffect(() => {dispatch(fetchContacts())}, [dispatch]);\n \n   return(\n       <ul className={style.list}>\n        {contacts.map(({ name, number, id }) => (\n            <li\n                className={style.list_name}\n                key={id}>\n                {name + ':' + number}\n\n                {<button\n                    className={style.button}\n                    type='button'\n                    name='delete'\n                    onClick={() => onDeleteContact(id)}>\n                    Ğ£Ğ´Ğ°Ğ»Ğ¸ÑÑ\n                </button>\n                }\n\n            </li>\n\n        ))}\n\n    </ul>\n   ) \n}\n\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {changeFilter} from '../redux/Contacts/contact-actions';\nimport {getFilter} from '../redux/Contacts/contact-selectors'\n\nconst Filter = () => {\n\nconst value = useSelector(getFilter);\nconst dispatch = useDispatch();\nconst onChange = (e) => dispatch(changeFilter(e.target.value));\n    \nreturn(\n        <div>\n           ĞĞ¾Ğ¸ÑĞº ĞºĞ¾Ğ½ÑĞ°ĞºÑĞ¾Ğ² Ğ¿Ğ¾ Ğ¸Ğ¼ĞµĞ½Ğ¸\n           <input\n           type = 'text'\n           value ={value}\n           onChange = {onChange}/>\n        </div>\n    )\n}\n\n\n\n// const mapStateToProps = state => ({\n//     value: state.contacts.filter\n// });\n\n// const mapDispatchToProps = dispatch => ({\n// onChange: (e) => dispatch(actions.changeFilter(e.target.value))\n// });\n\nexport default Filter;","import ContactForm from './components/ Ğ¡ontactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\n\nexport default function App() {\n\n\nreturn (\n  <div>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n   \n      <Filter/>\n    \n\n      <ContactList\n        />\n    \n  </div>\n);\n};\n\n\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n    addContactSuccess,\n    deleteContactSuccess,\n    fetchContactSuccess,\n    changeFilter,\n    fetchContactError,\n    addContactError,\n    deleteContactError,\n    fetchContactRequest,\n    addContactRequest,\n    deleteContactRequest\n} from './contact-actions';\n\n\nconst items = createReducer([], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]:(state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(contact => contact.id !== payload),\n\n})\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload\n})\n\nconst error = createReducer(null, {\n    [fetchContactError]: (_, { payload }) => payload,\n    [addContactError]: (_, { payload }) => payload,\n    [deleteContactError]: (_, { payload }) => payload,\n    [fetchContactRequest]: () => null,\n    [addContactRequest]: () => null,\n    [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({ \n    items, \n    filter, \n    error \n});\n\n\n\n\n\n\n\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport reduce from '../redux/Contacts/contact-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: reduce,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// eslint-disable-next-line \nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n\n      <App />\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm__form__3fu15\",\"label\":\"ContactForm__label__czKiJ\",\"input\":\"ContactForm__input__2ksW3\",\"button\":\"ContactForm__button__Dl2ri\"};"],"sourceRoot":""}